// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// EpisodeExtendedRecord - extended episode record
type EpisodeExtendedRecord struct {
	Aired             *string           `json:"aired,omitempty"`
	AirsAfterSeason   *int64            `json:"airsAfterSeason,omitempty"`
	AirsBeforeEpisode *int64            `json:"airsBeforeEpisode,omitempty"`
	AirsBeforeSeason  *int64            `json:"airsBeforeSeason,omitempty"`
	Awards            []AwardBaseRecord `json:"awards,omitempty"`
	Characters        []Character       `json:"characters,omitempty"`
	Companies         []Company         `json:"companies,omitempty"`
	ContentRatings    []ContentRating   `json:"contentRatings,omitempty"`
	// season, midseason, or series
	FinaleType           *string                  `json:"finaleType,omitempty"`
	ID                   *int64                   `json:"id,omitempty"`
	Image                *string                  `json:"image,omitempty"`
	ImageType            *int64                   `json:"imageType,omitempty"`
	IsMovie              *int64                   `json:"isMovie,omitempty"`
	LastUpdated          *string                  `json:"lastUpdated,omitempty"`
	LinkedMovie          *int64                   `json:"linkedMovie,omitempty"`
	Name                 *string                  `json:"name,omitempty"`
	NameTranslations     []string                 `json:"nameTranslations,omitempty"`
	Networks             []Company                `json:"networks,omitempty"`
	Nominations          []AwardNomineeBaseRecord `json:"nominations,omitempty"`
	Number               *int64                   `json:"number,omitempty"`
	Overview             *string                  `json:"overview,omitempty"`
	OverviewTranslations []string                 `json:"overviewTranslations,omitempty"`
	ProductionCode       *string                  `json:"productionCode,omitempty"`
	RemoteIds            []RemoteID               `json:"remoteIds,omitempty"`
	Runtime              *int64                   `json:"runtime,omitempty"`
	SeasonNumber         *int64                   `json:"seasonNumber,omitempty"`
	Seasons              []SeasonBaseRecord       `json:"seasons,omitempty"`
	SeriesID             *int64                   `json:"seriesId,omitempty"`
	Studios              []Company                `json:"studios,omitempty"`
	TagOptions           []TagOption              `json:"tagOptions,omitempty"`
	Trailers             []Trailer                `json:"trailers,omitempty"`
	// translation extended record
	Translations *TranslationExtended `json:"translations,omitempty"`
	Year         *string              `json:"year,omitempty"`
}

func (o *EpisodeExtendedRecord) GetAired() *string {
	if o == nil {
		return nil
	}
	return o.Aired
}

func (o *EpisodeExtendedRecord) GetAirsAfterSeason() *int64 {
	if o == nil {
		return nil
	}
	return o.AirsAfterSeason
}

func (o *EpisodeExtendedRecord) GetAirsBeforeEpisode() *int64 {
	if o == nil {
		return nil
	}
	return o.AirsBeforeEpisode
}

func (o *EpisodeExtendedRecord) GetAirsBeforeSeason() *int64 {
	if o == nil {
		return nil
	}
	return o.AirsBeforeSeason
}

func (o *EpisodeExtendedRecord) GetAwards() []AwardBaseRecord {
	if o == nil {
		return nil
	}
	return o.Awards
}

func (o *EpisodeExtendedRecord) GetCharacters() []Character {
	if o == nil {
		return nil
	}
	return o.Characters
}

func (o *EpisodeExtendedRecord) GetCompanies() []Company {
	if o == nil {
		return nil
	}
	return o.Companies
}

func (o *EpisodeExtendedRecord) GetContentRatings() []ContentRating {
	if o == nil {
		return nil
	}
	return o.ContentRatings
}

func (o *EpisodeExtendedRecord) GetFinaleType() *string {
	if o == nil {
		return nil
	}
	return o.FinaleType
}

func (o *EpisodeExtendedRecord) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EpisodeExtendedRecord) GetImage() *string {
	if o == nil {
		return nil
	}
	return o.Image
}

func (o *EpisodeExtendedRecord) GetImageType() *int64 {
	if o == nil {
		return nil
	}
	return o.ImageType
}

func (o *EpisodeExtendedRecord) GetIsMovie() *int64 {
	if o == nil {
		return nil
	}
	return o.IsMovie
}

func (o *EpisodeExtendedRecord) GetLastUpdated() *string {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *EpisodeExtendedRecord) GetLinkedMovie() *int64 {
	if o == nil {
		return nil
	}
	return o.LinkedMovie
}

func (o *EpisodeExtendedRecord) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EpisodeExtendedRecord) GetNameTranslations() []string {
	if o == nil {
		return nil
	}
	return o.NameTranslations
}

func (o *EpisodeExtendedRecord) GetNetworks() []Company {
	if o == nil {
		return nil
	}
	return o.Networks
}

func (o *EpisodeExtendedRecord) GetNominations() []AwardNomineeBaseRecord {
	if o == nil {
		return nil
	}
	return o.Nominations
}

func (o *EpisodeExtendedRecord) GetNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.Number
}

func (o *EpisodeExtendedRecord) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

func (o *EpisodeExtendedRecord) GetOverviewTranslations() []string {
	if o == nil {
		return nil
	}
	return o.OverviewTranslations
}

func (o *EpisodeExtendedRecord) GetProductionCode() *string {
	if o == nil {
		return nil
	}
	return o.ProductionCode
}

func (o *EpisodeExtendedRecord) GetRemoteIds() []RemoteID {
	if o == nil {
		return nil
	}
	return o.RemoteIds
}

func (o *EpisodeExtendedRecord) GetRuntime() *int64 {
	if o == nil {
		return nil
	}
	return o.Runtime
}

func (o *EpisodeExtendedRecord) GetSeasonNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.SeasonNumber
}

func (o *EpisodeExtendedRecord) GetSeasons() []SeasonBaseRecord {
	if o == nil {
		return nil
	}
	return o.Seasons
}

func (o *EpisodeExtendedRecord) GetSeriesID() *int64 {
	if o == nil {
		return nil
	}
	return o.SeriesID
}

func (o *EpisodeExtendedRecord) GetStudios() []Company {
	if o == nil {
		return nil
	}
	return o.Studios
}

func (o *EpisodeExtendedRecord) GetTagOptions() []TagOption {
	if o == nil {
		return nil
	}
	return o.TagOptions
}

func (o *EpisodeExtendedRecord) GetTrailers() []Trailer {
	if o == nil {
		return nil
	}
	return o.Trailers
}

func (o *EpisodeExtendedRecord) GetTranslations() *TranslationExtended {
	if o == nil {
		return nil
	}
	return o.Translations
}

func (o *EpisodeExtendedRecord) GetYear() *string {
	if o == nil {
		return nil
	}
	return o.Year
}
