// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// MovieExtendedRecord - extended movie record
type MovieExtendedRecord struct {
	Aliases        []Alias             `json:"aliases,omitempty"`
	Artworks       []ArtworkBaseRecord `json:"artworks,omitempty"`
	AudioLanguages []string            `json:"audioLanguages,omitempty"`
	Awards         []AwardBaseRecord   `json:"awards,omitempty"`
	BoxOffice      *string             `json:"boxOffice,omitempty"`
	BoxOfficeUS    *string             `json:"boxOfficeUS,omitempty"`
	Budget         *string             `json:"budget,omitempty"`
	Characters     []Character         `json:"characters,omitempty"`
	// Companies by type record
	Companies      *Companies      `json:"companies,omitempty"`
	ContentRatings []ContentRating `json:"contentRatings,omitempty"`
	// release record
	FirstRelease         *Release            `json:"first_release,omitempty"`
	Genres               []GenreBaseRecord   `json:"genres,omitempty"`
	ID                   *int64              `json:"id,omitempty"`
	Image                *string             `json:"image,omitempty"`
	Inspirations         []Inspiration       `json:"inspirations,omitempty"`
	LastUpdated          *string             `json:"lastUpdated,omitempty"`
	Lists                []ListBaseRecord    `json:"lists,omitempty"`
	Name                 *string             `json:"name,omitempty"`
	NameTranslations     []string            `json:"nameTranslations,omitempty"`
	OriginalCountry      *string             `json:"originalCountry,omitempty"`
	OriginalLanguage     *string             `json:"originalLanguage,omitempty"`
	OverviewTranslations []string            `json:"overviewTranslations,omitempty"`
	ProductionCountries  []ProductionCountry `json:"production_countries,omitempty"`
	Releases             []Release           `json:"releases,omitempty"`
	RemoteIds            []RemoteID          `json:"remoteIds,omitempty"`
	Runtime              *int64              `json:"runtime,omitempty"`
	Score                *float64            `json:"score,omitempty"`
	Slug                 *string             `json:"slug,omitempty"`
	SpokenLanguages      []string            `json:"spoken_languages,omitempty"`
	// status record
	Status            *Status            `json:"status,omitempty"`
	Studios           []StudioBaseRecord `json:"studios,omitempty"`
	SubtitleLanguages []string           `json:"subtitleLanguages,omitempty"`
	TagOptions        []TagOption        `json:"tagOptions,omitempty"`
	Trailers          []Trailer          `json:"trailers,omitempty"`
	// translation extended record
	Translations *TranslationExtended `json:"translations,omitempty"`
	Year         *string              `json:"year,omitempty"`
}

func (o *MovieExtendedRecord) GetAliases() []Alias {
	if o == nil {
		return nil
	}
	return o.Aliases
}

func (o *MovieExtendedRecord) GetArtworks() []ArtworkBaseRecord {
	if o == nil {
		return nil
	}
	return o.Artworks
}

func (o *MovieExtendedRecord) GetAudioLanguages() []string {
	if o == nil {
		return nil
	}
	return o.AudioLanguages
}

func (o *MovieExtendedRecord) GetAwards() []AwardBaseRecord {
	if o == nil {
		return nil
	}
	return o.Awards
}

func (o *MovieExtendedRecord) GetBoxOffice() *string {
	if o == nil {
		return nil
	}
	return o.BoxOffice
}

func (o *MovieExtendedRecord) GetBoxOfficeUS() *string {
	if o == nil {
		return nil
	}
	return o.BoxOfficeUS
}

func (o *MovieExtendedRecord) GetBudget() *string {
	if o == nil {
		return nil
	}
	return o.Budget
}

func (o *MovieExtendedRecord) GetCharacters() []Character {
	if o == nil {
		return nil
	}
	return o.Characters
}

func (o *MovieExtendedRecord) GetCompanies() *Companies {
	if o == nil {
		return nil
	}
	return o.Companies
}

func (o *MovieExtendedRecord) GetContentRatings() []ContentRating {
	if o == nil {
		return nil
	}
	return o.ContentRatings
}

func (o *MovieExtendedRecord) GetFirstRelease() *Release {
	if o == nil {
		return nil
	}
	return o.FirstRelease
}

func (o *MovieExtendedRecord) GetGenres() []GenreBaseRecord {
	if o == nil {
		return nil
	}
	return o.Genres
}

func (o *MovieExtendedRecord) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieExtendedRecord) GetImage() *string {
	if o == nil {
		return nil
	}
	return o.Image
}

func (o *MovieExtendedRecord) GetInspirations() []Inspiration {
	if o == nil {
		return nil
	}
	return o.Inspirations
}

func (o *MovieExtendedRecord) GetLastUpdated() *string {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *MovieExtendedRecord) GetLists() []ListBaseRecord {
	if o == nil {
		return nil
	}
	return o.Lists
}

func (o *MovieExtendedRecord) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *MovieExtendedRecord) GetNameTranslations() []string {
	if o == nil {
		return nil
	}
	return o.NameTranslations
}

func (o *MovieExtendedRecord) GetOriginalCountry() *string {
	if o == nil {
		return nil
	}
	return o.OriginalCountry
}

func (o *MovieExtendedRecord) GetOriginalLanguage() *string {
	if o == nil {
		return nil
	}
	return o.OriginalLanguage
}

func (o *MovieExtendedRecord) GetOverviewTranslations() []string {
	if o == nil {
		return nil
	}
	return o.OverviewTranslations
}

func (o *MovieExtendedRecord) GetProductionCountries() []ProductionCountry {
	if o == nil {
		return nil
	}
	return o.ProductionCountries
}

func (o *MovieExtendedRecord) GetReleases() []Release {
	if o == nil {
		return nil
	}
	return o.Releases
}

func (o *MovieExtendedRecord) GetRemoteIds() []RemoteID {
	if o == nil {
		return nil
	}
	return o.RemoteIds
}

func (o *MovieExtendedRecord) GetRuntime() *int64 {
	if o == nil {
		return nil
	}
	return o.Runtime
}

func (o *MovieExtendedRecord) GetScore() *float64 {
	if o == nil {
		return nil
	}
	return o.Score
}

func (o *MovieExtendedRecord) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *MovieExtendedRecord) GetSpokenLanguages() []string {
	if o == nil {
		return nil
	}
	return o.SpokenLanguages
}

func (o *MovieExtendedRecord) GetStatus() *Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *MovieExtendedRecord) GetStudios() []StudioBaseRecord {
	if o == nil {
		return nil
	}
	return o.Studios
}

func (o *MovieExtendedRecord) GetSubtitleLanguages() []string {
	if o == nil {
		return nil
	}
	return o.SubtitleLanguages
}

func (o *MovieExtendedRecord) GetTagOptions() []TagOption {
	if o == nil {
		return nil
	}
	return o.TagOptions
}

func (o *MovieExtendedRecord) GetTrailers() []Trailer {
	if o == nil {
		return nil
	}
	return o.Trailers
}

func (o *MovieExtendedRecord) GetTranslations() *TranslationExtended {
	if o == nil {
		return nil
	}
	return o.Translations
}

func (o *MovieExtendedRecord) GetYear() *string {
	if o == nil {
		return nil
	}
	return o.Year
}
