// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"

	"github.com/dashotv/tvdb/openapi/models/shared"
)

// GetSeriesExtendedQueryParamMeta - meta
type GetSeriesExtendedQueryParamMeta string

const (
	GetSeriesExtendedQueryParamMetaTranslations GetSeriesExtendedQueryParamMeta = "translations"
	GetSeriesExtendedQueryParamMetaEpisodes     GetSeriesExtendedQueryParamMeta = "episodes"
)

func (e GetSeriesExtendedQueryParamMeta) ToPointer() *GetSeriesExtendedQueryParamMeta {
	return &e
}
func (e *GetSeriesExtendedQueryParamMeta) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "translations":
		fallthrough
	case "episodes":
		*e = GetSeriesExtendedQueryParamMeta(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSeriesExtendedQueryParamMeta: %v", v)
	}
}

type GetSeriesExtendedRequest struct {
	// id
	ID float64 `pathParam:"style=simple,explode=false,name=id"`
	// meta
	Meta *GetSeriesExtendedQueryParamMeta `queryParam:"style=form,explode=true,name=meta"`
	// reduce the payload and returns the short version of this record without characters and artworks
	Short *bool `queryParam:"style=form,explode=true,name=short"`
}

func (o *GetSeriesExtendedRequest) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *GetSeriesExtendedRequest) GetMeta() *GetSeriesExtendedQueryParamMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *GetSeriesExtendedRequest) GetShort() *bool {
	if o == nil {
		return nil
	}
	return o.Short
}

// GetSeriesExtendedResponseBody - response
type GetSeriesExtendedResponseBody struct {
	// The extended record for a series. All series airs time like firstAired, lastAired, nextAired, etc. are in US EST for US series, and for all non-US series, the time of the showâ€™s country capital or most populous city. For streaming services, is the official release time. See https://support.thetvdb.com/kb/faq.php?id=29.
	Data   *shared.SeriesExtendedRecord `json:"data,omitempty"`
	Status *string                      `json:"status,omitempty"`
}

func (o *GetSeriesExtendedResponseBody) GetData() *shared.SeriesExtendedRecord {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetSeriesExtendedResponseBody) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetSeriesExtendedResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// response
	Object *GetSeriesExtendedResponseBody
}

func (o *GetSeriesExtendedResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSeriesExtendedResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSeriesExtendedResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSeriesExtendedResponse) GetObject() *GetSeriesExtendedResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
