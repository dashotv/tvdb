// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"

	"github.com/dashotv/tvdb/openapi/models/shared"
)

// GetMovieExtendedMeta - meta
type GetMovieExtendedMeta string

const (
	GetMovieExtendedMetaTranslations GetMovieExtendedMeta = "translations"
)

func (e GetMovieExtendedMeta) ToPointer() *GetMovieExtendedMeta {
	return &e
}

func (e *GetMovieExtendedMeta) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "translations":
		*e = GetMovieExtendedMeta(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMovieExtendedMeta: %v", v)
	}
}

type GetMovieExtendedRequest struct {
	// id
	ID float64 `pathParam:"style=simple,explode=false,name=id"`
	// meta
	Meta *GetMovieExtendedMeta `queryParam:"style=form,explode=true,name=meta"`
	// reduce the payload and returns the short version of this record without characters, artworks and trailers.
	Short *bool `queryParam:"style=form,explode=true,name=short"`
}

func (o *GetMovieExtendedRequest) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *GetMovieExtendedRequest) GetMeta() *GetMovieExtendedMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *GetMovieExtendedRequest) GetShort() *bool {
	if o == nil {
		return nil
	}
	return o.Short
}

// GetMovieExtended200ApplicationJSON - response
type GetMovieExtended200ApplicationJSON struct {
	// extended movie record
	Data   *shared.MovieExtendedRecord `json:"data,omitempty"`
	Status *string                     `json:"status,omitempty"`
}

func (o *GetMovieExtended200ApplicationJSON) GetData() *shared.MovieExtendedRecord {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetMovieExtended200ApplicationJSON) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetMovieExtendedResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// response
	GetMovieExtended200ApplicationJSONObject *GetMovieExtended200ApplicationJSON
}

func (o *GetMovieExtendedResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetMovieExtendedResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetMovieExtendedResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetMovieExtendedResponse) GetGetMovieExtended200ApplicationJSONObject() *GetMovieExtended200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetMovieExtended200ApplicationJSONObject
}
