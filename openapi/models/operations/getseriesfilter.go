// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"

	"github.com/dashotv/tvdb/openapi/models/shared"
)

// GetSeriesFilterGenre - Genre id. This id can be found using **/genres** endpoint.
type GetSeriesFilterGenre int64

const (
	GetSeriesFilterGenreOne         GetSeriesFilterGenre = 1
	GetSeriesFilterGenreTwo         GetSeriesFilterGenre = 2
	GetSeriesFilterGenreThree       GetSeriesFilterGenre = 3
	GetSeriesFilterGenreFour        GetSeriesFilterGenre = 4
	GetSeriesFilterGenreFive        GetSeriesFilterGenre = 5
	GetSeriesFilterGenreSix         GetSeriesFilterGenre = 6
	GetSeriesFilterGenreSeven       GetSeriesFilterGenre = 7
	GetSeriesFilterGenreEight       GetSeriesFilterGenre = 8
	GetSeriesFilterGenreNine        GetSeriesFilterGenre = 9
	GetSeriesFilterGenreTen         GetSeriesFilterGenre = 10
	GetSeriesFilterGenreEleven      GetSeriesFilterGenre = 11
	GetSeriesFilterGenreTwelve      GetSeriesFilterGenre = 12
	GetSeriesFilterGenreThirteen    GetSeriesFilterGenre = 13
	GetSeriesFilterGenreFourteen    GetSeriesFilterGenre = 14
	GetSeriesFilterGenreFifteen     GetSeriesFilterGenre = 15
	GetSeriesFilterGenreSixteen     GetSeriesFilterGenre = 16
	GetSeriesFilterGenreSeventeen   GetSeriesFilterGenre = 17
	GetSeriesFilterGenreEighteen    GetSeriesFilterGenre = 18
	GetSeriesFilterGenreNineteen    GetSeriesFilterGenre = 19
	GetSeriesFilterGenreTwentyOne   GetSeriesFilterGenre = 21
	GetSeriesFilterGenreTwentyTwo   GetSeriesFilterGenre = 22
	GetSeriesFilterGenreTwentyThree GetSeriesFilterGenre = 23
	GetSeriesFilterGenreTwentyFour  GetSeriesFilterGenre = 24
	GetSeriesFilterGenreTwentyFive  GetSeriesFilterGenre = 25
	GetSeriesFilterGenreTwentySix   GetSeriesFilterGenre = 26
	GetSeriesFilterGenreTwentySeven GetSeriesFilterGenre = 27
	GetSeriesFilterGenreTwentyEight GetSeriesFilterGenre = 28
	GetSeriesFilterGenreTwentyNine  GetSeriesFilterGenre = 29
	GetSeriesFilterGenreThirty      GetSeriesFilterGenre = 30
	GetSeriesFilterGenreThirtyOne   GetSeriesFilterGenre = 31
	GetSeriesFilterGenreThirtyTwo   GetSeriesFilterGenre = 32
	GetSeriesFilterGenreThirtyThree GetSeriesFilterGenre = 33
	GetSeriesFilterGenreThirtyFour  GetSeriesFilterGenre = 34
	GetSeriesFilterGenreThirtyFive  GetSeriesFilterGenre = 35
	GetSeriesFilterGenreThirtySix   GetSeriesFilterGenre = 36
)

func (e GetSeriesFilterGenre) ToPointer() *GetSeriesFilterGenre {
	return &e
}

func (e *GetSeriesFilterGenre) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		fallthrough
	case 9:
		fallthrough
	case 10:
		fallthrough
	case 11:
		fallthrough
	case 12:
		fallthrough
	case 13:
		fallthrough
	case 14:
		fallthrough
	case 15:
		fallthrough
	case 16:
		fallthrough
	case 17:
		fallthrough
	case 18:
		fallthrough
	case 19:
		fallthrough
	case 21:
		fallthrough
	case 22:
		fallthrough
	case 23:
		fallthrough
	case 24:
		fallthrough
	case 25:
		fallthrough
	case 26:
		fallthrough
	case 27:
		fallthrough
	case 28:
		fallthrough
	case 29:
		fallthrough
	case 30:
		fallthrough
	case 31:
		fallthrough
	case 32:
		fallthrough
	case 33:
		fallthrough
	case 34:
		fallthrough
	case 35:
		fallthrough
	case 36:
		*e = GetSeriesFilterGenre(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSeriesFilterGenre: %v", v)
	}
}

// GetSeriesFilterSort - sort by results
type GetSeriesFilterSort string

const (
	GetSeriesFilterSortScore      GetSeriesFilterSort = "score"
	GetSeriesFilterSortFirstAired GetSeriesFilterSort = "firstAired"
	GetSeriesFilterSortLastAired  GetSeriesFilterSort = "lastAired"
	GetSeriesFilterSortName       GetSeriesFilterSort = "name"
)

func (e GetSeriesFilterSort) ToPointer() *GetSeriesFilterSort {
	return &e
}

func (e *GetSeriesFilterSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "score":
		fallthrough
	case "firstAired":
		fallthrough
	case "lastAired":
		fallthrough
	case "name":
		*e = GetSeriesFilterSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSeriesFilterSort: %v", v)
	}
}

// GetSeriesFilterSortType - sort type ascending or descending
type GetSeriesFilterSortType string

const (
	GetSeriesFilterSortTypeAsc  GetSeriesFilterSortType = "asc"
	GetSeriesFilterSortTypeDesc GetSeriesFilterSortType = "desc"
)

func (e GetSeriesFilterSortType) ToPointer() *GetSeriesFilterSortType {
	return &e
}

func (e *GetSeriesFilterSortType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = GetSeriesFilterSortType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSeriesFilterSortType: %v", v)
	}
}

// GetSeriesFilterStatus - status
type GetSeriesFilterStatus int64

const (
	GetSeriesFilterStatusOne   GetSeriesFilterStatus = 1
	GetSeriesFilterStatusTwo   GetSeriesFilterStatus = 2
	GetSeriesFilterStatusThree GetSeriesFilterStatus = 3
)

func (e GetSeriesFilterStatus) ToPointer() *GetSeriesFilterStatus {
	return &e
}

func (e *GetSeriesFilterStatus) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		*e = GetSeriesFilterStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSeriesFilterStatus: %v", v)
	}
}

type GetSeriesFilterRequest struct {
	// production company
	Company *int64 `queryParam:"style=form,explode=true,name=company"`
	// content rating id base on a country
	ContentRating *int64 `queryParam:"style=form,explode=true,name=contentRating"`
	// country of origin
	Country string `queryParam:"style=form,explode=true,name=country"`
	// Genre id. This id can be found using **/genres** endpoint.
	Genre *GetSeriesFilterGenre `queryParam:"style=form,explode=true,name=genre"`
	// original language
	Lang string `queryParam:"style=form,explode=true,name=lang"`
	// sort by results
	Sort *GetSeriesFilterSort `queryParam:"style=form,explode=true,name=sort"`
	// sort type ascending or descending
	SortType *GetSeriesFilterSortType `queryParam:"style=form,explode=true,name=sortType"`
	// status
	Status *GetSeriesFilterStatus `queryParam:"style=form,explode=true,name=status"`
	// release year
	Year *int64 `queryParam:"style=form,explode=true,name=year"`
}

func (o *GetSeriesFilterRequest) GetCompany() *int64 {
	if o == nil {
		return nil
	}
	return o.Company
}

func (o *GetSeriesFilterRequest) GetContentRating() *int64 {
	if o == nil {
		return nil
	}
	return o.ContentRating
}

func (o *GetSeriesFilterRequest) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *GetSeriesFilterRequest) GetGenre() *GetSeriesFilterGenre {
	if o == nil {
		return nil
	}
	return o.Genre
}

func (o *GetSeriesFilterRequest) GetLang() string {
	if o == nil {
		return ""
	}
	return o.Lang
}

func (o *GetSeriesFilterRequest) GetSort() *GetSeriesFilterSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *GetSeriesFilterRequest) GetSortType() *GetSeriesFilterSortType {
	if o == nil {
		return nil
	}
	return o.SortType
}

func (o *GetSeriesFilterRequest) GetStatus() *GetSeriesFilterStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSeriesFilterRequest) GetYear() *int64 {
	if o == nil {
		return nil
	}
	return o.Year
}

// GetSeriesFilter200ApplicationJSON - response
type GetSeriesFilter200ApplicationJSON struct {
	Data []shared.SeriesBaseRecord `json:"data,omitempty"`
}

func (o *GetSeriesFilter200ApplicationJSON) GetData() []shared.SeriesBaseRecord {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetSeriesFilterResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// response
	GetSeriesFilter200ApplicationJSONObject *GetSeriesFilter200ApplicationJSON
}

func (o *GetSeriesFilterResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSeriesFilterResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSeriesFilterResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSeriesFilterResponse) GetGetSeriesFilter200ApplicationJSONObject() *GetSeriesFilter200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetSeriesFilter200ApplicationJSONObject
}
